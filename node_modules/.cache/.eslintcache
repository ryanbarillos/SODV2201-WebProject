[{"/home-extra/compdev/Documents/software-development/from-school/bow-valley-college/Term 03/SODV2201/homework/assignment-1/test/src/index.js":"1","/home-extra/compdev/Documents/software-development/from-school/bow-valley-college/Term 03/SODV2201/homework/assignment-1/test/src/App.js":"2","/home-extra/compdev/Documents/software-development/from-school/bow-valley-college/Term 03/SODV2201/homework/assignment-1/test/src/reportWebVitals.js":"3","/home-extra/compdev/Documents/software-development/from-school/bow-valley-college/Term 03/SODV2201/homework/assignment-1/test/src/bvcAdmin/AdminMain.js":"4","/home-extra/compdev/Documents/software-development/from-school/bow-valley-college/Term 03/SODV2201/homework/assignment-1/test/src/bvcStudent/StudentMain.js":"5","/home-extra/compdev/Documents/software-development/from-school/bow-valley-college/Term 03/SODV2201/homework/assignment-1/test/src/bvcAdmin/components/Navbar.js":"6","/home-extra/compdev/Documents/software-development/from-school/bow-valley-college/Term 03/SODV2201/homework/assignment-1/test/src/bvcAdmin/pages/Login.js":"7","/home-extra/compdev/Documents/software-development/from-school/bow-valley-college/Term 03/SODV2201/homework/assignment-1/test/src/bvcAdmin/pages/Home.js":"8","/home-extra/compdev/Documents/software-development/from-school/bow-valley-college/Term 03/SODV2201/homework/assignment-1/test/src/bvcAdmin/pages/SearchCourse.js":"9","/home-extra/compdev/Documents/software-development/from-school/bow-valley-college/Term 03/SODV2201/homework/assignment-1/test/src/bvcAdmin/pages/AddCourse.js":"10","/home-extra/compdev/Documents/software-development/from-school/bow-valley-college/Term 03/SODV2201/homework/assignment-1/test/src/bvcAdmin/pages/StudentList.js":"11","/home-extra/compdev/Documents/software-development/from-school/bow-valley-college/Term 03/SODV2201/homework/assignment-1/test/src/bvcAdmin/pages/StudentForms.js":"12","/home-extra/compdev/Documents/software-development/from-school/bow-valley-college/Term 03/SODV2201/homework/assignment-1/test/src/bvcAdmin/pages/RemoveCourse.js":"13","/home-extra/compdev/Documents/software-development/from-school/bow-valley-college/Term 03/SODV2201/homework/assignment-1/test/src/bvcAdmin/pages/PageNotFound.js":"14","/home-extra/compdev/Documents/software-development/from-school/bow-valley-college/Term 03/SODV2201/homework/assignment-1/test/src/bvcStudent/components/Navbar.js":"15","/home-extra/compdev/Documents/software-development/from-school/bow-valley-college/Term 03/SODV2201/homework/assignment-1/test/src/bvcStudent/pages/CourseRemove.js":"16","/home-extra/compdev/Documents/software-development/from-school/bow-valley-college/Term 03/SODV2201/homework/assignment-1/test/src/allPages/pages/GetHelp.js":"17","/home-extra/compdev/Documents/software-development/from-school/bow-valley-college/Term 03/SODV2201/homework/assignment-1/test/src/bvcStudent/pages/CourseAdd.js":"18","/home-extra/compdev/Documents/software-development/from-school/bow-valley-college/Term 03/SODV2201/homework/assignment-1/test/src/bvcStudent/pages/Home.js":"19","/home-extra/compdev/Documents/software-development/from-school/bow-valley-college/Term 03/SODV2201/homework/assignment-1/test/src/allPages/pages/PageNotFound.js":"20","/home-extra/compdev/Documents/software-development/from-school/bow-valley-college/Term 03/SODV2201/homework/assignment-1/test/src/bvcStudent/pages/MyCourses.js":"21"},{"size":535,"mtime":1698083676000,"results":"22","hashOfConfig":"23"},{"size":1563,"mtime":1698296751140,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1698083676000,"results":"25","hashOfConfig":"23"},{"size":1197,"mtime":1698297106837,"results":"26","hashOfConfig":"23"},{"size":1099,"mtime":1698297005857,"results":"27","hashOfConfig":"23"},{"size":693,"mtime":1698083676000,"results":"28","hashOfConfig":"23"},{"size":158,"mtime":1698083676000,"results":"29","hashOfConfig":"23"},{"size":310,"mtime":1698297856285,"results":"30","hashOfConfig":"23"},{"size":1390,"mtime":1698083676000,"results":"31","hashOfConfig":"23"},{"size":1485,"mtime":1698083676000,"results":"32","hashOfConfig":"23"},{"size":1584,"mtime":1698108360000,"results":"33","hashOfConfig":"23"},{"size":942,"mtime":1698108318000,"results":"34","hashOfConfig":"23"},{"size":1477,"mtime":1698083676000,"results":"35","hashOfConfig":"23"},{"size":192,"mtime":1698083676000,"results":"36","hashOfConfig":"23"},{"size":693,"mtime":1698293151264,"results":"37","hashOfConfig":"23"},{"size":917,"mtime":1698292983552,"results":"38","hashOfConfig":"23"},{"size":183,"mtime":1698296467671,"results":"39","hashOfConfig":"23"},{"size":925,"mtime":1698292936305,"results":"40","hashOfConfig":"23"},{"size":316,"mtime":1698297824007,"results":"41","hashOfConfig":"23"},{"size":192,"mtime":1698282622475,"results":"42","hashOfConfig":"23"},{"size":2461,"mtime":1698296356512,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ggasvr",{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},"/home-extra/compdev/Documents/software-development/from-school/bow-valley-college/Term 03/SODV2201/homework/assignment-1/test/src/index.js",[],[],"/home-extra/compdev/Documents/software-development/from-school/bow-valley-college/Term 03/SODV2201/homework/assignment-1/test/src/App.js",["118"],[],"/*\n  SODV2201, Assignment 01\n\n  By Group 3\n    Ryan Barillos\n    Gurleen Kaur\n    David Yusty\n*/\n\n// CSS\nimport \"./App.css\";\nimport \"./allPages/styles/AllPages.css\";\nimport \"./allPages/styles/Navbar.css\";\nimport \"./allPages/styles/Forms.css\";\n\n// Javascript & React Components\nimport Logo from \"./allPages/assets/bvcLogo.svg\";\nimport { useState } from \"react\";\nimport AdminMain from \"./bvcAdmin/AdminMain\";\nimport StudentMain from \"./bvcStudent/StudentMain\";\n\nfunction App() {\n  const [loginMode, setLoginMode] = useState(\"\");\n\n  const changeloginMode = (loginAs) => {\n    setLoginMode(loginAs);\n  };\n\n  if (loginMode === \"student\") {\n    return <StudentMain />;\n  } else if (loginMode === \"admin\") {\n    return <AdminMain />;\n  } else {\n    return (\n      <div>\n        <header className=\"navbar\">\n          <div className=\"leftSide\">\n            <img src={Logo} />\n            <h1>Log In</h1>\n          </div>\n        </header>\n\n        <div className=\"LogIn\">\n          <h1>Student Log In</h1>\n          <form onSubmit={() => changeloginMode(\"student\")}>\n            <label>Email (Required)</label>\n            <input type=\"text\" required></input>\n            <label>Password (Required)</label>\n            <input type=\"text\" required></input>\n            <button onChange={() => changeloginMode(\"student\")}>Done</button>\n          </form>\n        </div>\n\n        <div className=\"special\">\n          <button onClick={() => changeloginMode(\"admin\")}>\n            Log in as Admin\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/home-extra/compdev/Documents/software-development/from-school/bow-valley-college/Term 03/SODV2201/homework/assignment-1/test/src/reportWebVitals.js",[],[],"/home-extra/compdev/Documents/software-development/from-school/bow-valley-college/Term 03/SODV2201/homework/assignment-1/test/src/bvcAdmin/AdminMain.js",["119"],[],"import \"./styles/AllPages.css\";\nimport \"./styles/Forms.css\";\nimport React from \"react\";\nimport { Route, BrowserRouter as Router, Routes } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport AdminLogin from \"./pages/Login\";\nimport Home from \"./pages/Home\";\nimport SearchCourse from \"./pages/SearchCourse\";\nimport AddCourse from \"./pages/AddCourse\";\nimport StudentList from \"./pages/StudentList\";\nimport StudentForms from \"./pages/StudentForms\";\nimport RemoveCourse from \"./pages/RemoveCourse\";\nimport PageNotFound from \"./pages/PageNotFound\";\n\nfunction AdminMain() {\n  return (\n    <div className=\"AdminMain\">\n      <Router>\n        <Navbar />\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/SearchCourse\" element={<SearchCourse />} />\n          <Route path=\"/AddCourse\" element={<AddCourse />} />\n          <Route path=\"/RemoveCourse\" element={<RemoveCourse />} />\n          <Route path=\"/StudentForms\" element={<StudentForms />} />\n          <Route path=\"/StudentList\" element={<StudentList />} />\n          <Route path=\"*\" element={<PageNotFound />} />\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\nexport default AdminMain;\n","/home-extra/compdev/Documents/software-development/from-school/bow-valley-college/Term 03/SODV2201/homework/assignment-1/test/src/bvcStudent/StudentMain.js",[],[],"/home-extra/compdev/Documents/software-development/from-school/bow-valley-college/Term 03/SODV2201/homework/assignment-1/test/src/bvcAdmin/components/Navbar.js",["120"],[],"import \"../styles/Navbar.css\";\nimport React from \"react\";\nimport Logo from \"../assets/bvcLogo.svg\";\nimport { Link } from \"react-router-dom\";\n\nfunction Navbar() {\n  return (\n    <div className=\"navbar\">\n      <div className=\"leftSide\">\n        <img src={Logo} />\n        <h1>Admin Mode</h1>\n      </div>\n      <div className=\"rightSide\">\n        {/* <Link to=\"Home\">Home</Link> */}\n        <Link to=\"SearchCourse\">Search Course</Link>\n        <Link to=\"AddCourse\">Add Course</Link>\n        <Link to=\"RemoveCourse\">Remove Course</Link>\n        <Link to=\"StudentList\">Student List</Link>\n        <Link to=\"StudentForms\">Student Forms</Link>\n      </div>\n    </div>\n  );\n}\n\nexport default Navbar;\n","/home-extra/compdev/Documents/software-development/from-school/bow-valley-college/Term 03/SODV2201/homework/assignment-1/test/src/bvcAdmin/pages/Login.js",[],[],"/home-extra/compdev/Documents/software-development/from-school/bow-valley-college/Term 03/SODV2201/homework/assignment-1/test/src/bvcAdmin/pages/Home.js",[],[],"/home-extra/compdev/Documents/software-development/from-school/bow-valley-college/Term 03/SODV2201/homework/assignment-1/test/src/bvcAdmin/pages/SearchCourse.js",["121"],[],"import React, { useState } from \"react\";\n\nfunction SearchCourse() {\n  const [cName, cNameSet] = useState(\"\");\n  const [cCode, cCodeSet] = useState(\"\");\n  const [cDateStart, cDateStartSet] = useState(\"\");\n  const [cDateEnd, cDateEndSet] = useState(\"\");\n  const handleSubmit = (e) => {\n    // To not immediately lose all form values via refreshing upon submitting\n\n    const newCourse = { cName, cCode, cDateStart, cDateEnd };\n  };\n\n  return (\n    <div>\n      <h1>Search Course</h1>\n      <form onSubmit={handleSubmit}>\n        <label>Course Name (Optional)</label>\n        <input\n          type=\"text\"\n          value={cName}\n          onChange={(newName) => cNameSet(newName.target.value)}\n        ></input>\n        <label>Course Code (Optional)</label>\n        <input\n          type=\"text\"\n          value={cCode}\n          onChange={(newCode) => cCodeSet(newCode.target.value)}\n        ></input>\n        <label>Start Date (Optional)</label>\n        <input\n          type=\"date\"\n          value={cDateStart}\n          onChange={(cDateStart) => cDateStartSet(cDateStart.target.value)}\n        ></input>\n        <label>End Date (Optional)</label>\n        <input\n          type=\"date\"\n          value={cDateEnd}\n          onChange={(cDateEnd) => cDateEndSet(cDateEnd.target.value)}\n        ></input>\n        <button>Done</button>\n      </form>\n    </div>\n  );\n}\n\nexport default SearchCourse;\n","/home-extra/compdev/Documents/software-development/from-school/bow-valley-college/Term 03/SODV2201/homework/assignment-1/test/src/bvcAdmin/pages/AddCourse.js",["122"],[],"import React, { useState } from \"react\";\n\nfunction AddCourse() {\n  const [cName, cNameSet] = useState(\"\");\n  const [cCode, cCodeSet] = useState(\"\");\n  const [cDateStart, cDateStartSet] = useState(\"\");\n  const [cDateEnd, cDateEndSet] = useState(\"\");\n  const handleSubmit = (e) => {\n    // To not immediately lose all form values via refreshing upon submitting\n\n    const newCourse = { cName, cCode, cDateStart, cDateEnd };\n    alert(\"Course Added!\");\n  };\n\n  return (\n    <div>\n      <h1>Add Course</h1>\n      <form onSubmit={handleSubmit}>\n        <label>Course Name (Required)</label>\n        <input\n          type=\"text\"\n          value={cName}\n          onChange={(newName) => cNameSet(newName.target.value)}\n          required\n        ></input>\n        <label>Course Code (Required)</label>\n        <input\n          type=\"text\"\n          value={cCode}\n          onChange={(newCode) => cCodeSet(newCode.target.value)}\n          required\n        ></input>\n        <label>Start Date (Required)</label>\n        <input\n          type=\"date\"\n          value={cDateStart}\n          onChange={(cDateStart) => cDateStartSet(cDateStart.target.value)}\n          required\n        ></input>\n        <label>End Date (Required)</label>\n        <input\n          type=\"date\"\n          value={cDateEnd}\n          onChange={(cDateEnd) => cDateEndSet(cDateEnd.target.value)}\n          required\n        ></input>\n        <button>Done</button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddCourse;\n","/home-extra/compdev/Documents/software-development/from-school/bow-valley-college/Term 03/SODV2201/homework/assignment-1/test/src/bvcAdmin/pages/StudentList.js",[],[],"/home-extra/compdev/Documents/software-development/from-school/bow-valley-college/Term 03/SODV2201/homework/assignment-1/test/src/bvcAdmin/pages/StudentForms.js",["123"],[],"\nimport React, { useState } from \"react\";\n\nfunction StudentForms() {\n  const [studentName, setStudentName] = useState(\"\");\n  const [studentProgram, setStudentProgram] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const newStudent = { name: studentName, program: studentProgram };\n    alert(\"Student Form Submitted!\");\n  };\n\n  return (\n    <div>\n      <h1>Student Form</h1>\n      <form onSubmit={handleSubmit}>\n        <label>Student Name (Required)</label>\n        <input\n          type=\"text\"\n          value={studentName}\n          onChange={(e) => setStudentName(e.target.value)}\n          required\n        />\n        <label>Program (Required)</label>\n        <input\n          type=\"text\"\n          value={studentProgram}\n          onChange={(e) => setStudentProgram(e.target.value)}\n          required\n        />\n        <button>Submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default StudentForms;\n","/home-extra/compdev/Documents/software-development/from-school/bow-valley-college/Term 03/SODV2201/homework/assignment-1/test/src/bvcAdmin/pages/RemoveCourse.js",["124"],[],"import React, { useState } from \"react\";\n\nfunction RemoveCourse() {\n  const [cName, cNameSet] = useState(\"\");\n  const [cCode, cCodeSet] = useState(\"\");\n  const [cDateStart, cDateStartSet] = useState(\"\");\n  const [cDateEnd, cDateEndSet] = useState(\"\");\n  const handleSubmit = (e) => {\n    // To not immediately lose all form values via refreshing upon submitting\n\n    const newCourse = { cName, cCode, cDateStart, cDateEnd };\n    alert(\"Course Removed!\");\n  };\n\n  return (\n    <div>\n      <h1>Remove Course</h1>\n      <form onSubmit={handleSubmit}>\n        <label>Course Name (Optional)</label>\n        <input\n          type=\"text\"\n          value={cName}\n          onChange={(newName) => cNameSet(newName.target.value)}\n        ></input>\n        <label>Course Code (Required)</label>\n        <input\n          type=\"text\"\n          value={cCode}\n          onChange={(newCode) => cCodeSet(newCode.target.value)}\n          required\n        ></input>\n        <label>Start Date (Required)</label>\n        <input\n          type=\"date\"\n          value={cDateStart}\n          onChange={(cDateStart) => cDateStartSet(cDateStart.target.value)}\n          required\n        ></input>\n        <label>End Date (Required)</label>\n        <input\n          type=\"date\"\n          value={cDateEnd}\n          onChange={(cDateEnd) => cDateEndSet(cDateEnd.target.value)}\n          required\n        ></input>\n        <button>Done</button>\n      </form>\n    </div>\n  );\n}\n\nexport default RemoveCourse;\n","/home-extra/compdev/Documents/software-development/from-school/bow-valley-college/Term 03/SODV2201/homework/assignment-1/test/src/bvcAdmin/pages/PageNotFound.js",[],[],"/home-extra/compdev/Documents/software-development/from-school/bow-valley-college/Term 03/SODV2201/homework/assignment-1/test/src/bvcStudent/components/Navbar.js",["125"],[],"// CSS\nimport \"../../allPages/styles/Navbar.css\";\nimport Logo from \"../../allPages/assets/bvcLogo.svg\";\n\n// Javascript & React Components\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Navbar() {\n  return (\n    <div className=\"navbar\">\n      <div className=\"leftSide\">\n        <img src={Logo} />\n        <h1>Student Mode</h1>\n      </div>\n      <div className=\"rightSide\">\n        {/* <Link to=\"Home\">Home</Link> */}\n        <Link to=\"MyCourses\">My Courses</Link>\n        <Link to=\"CourseAdd\">Add Course</Link>\n        <Link to=\"CourseRemove\">Remove Course</Link>\n        <Link to=\"GetHelp\">Get Help</Link>\n      </div>\n    </div>\n  );\n}\n\nexport default Navbar;\n","/home-extra/compdev/Documents/software-development/from-school/bow-valley-college/Term 03/SODV2201/homework/assignment-1/test/src/bvcStudent/pages/CourseRemove.js",["126"],[],"import React, { useState } from \"react\";\n\nfunction CourseRemove() {\n  const [cName, cNameSet] = useState(\"\");\n  const [cCode, cCodeSet] = useState(\"\");\n  const handleSubmit = (e) => {\n    // To not immediately lose all form values via refreshing upon submitting\n\n    const newCourse = { cName, cCode };\n    alert(\"Course Removed!\");\n  };\n\n  return (\n    <div>\n      <h1>Remove Course</h1>\n      <form onSubmit={handleSubmit}>\n        <label>Course Name (Optional)</label>\n        <input\n          type=\"text\"\n          value={cName}\n          onChange={(newName) => cNameSet(newName.target.value)}\n        ></input>\n        <label>Course Code (Required)</label>\n        <input\n          type=\"text\"\n          value={cCode}\n          onChange={(newCode) => cCodeSet(newCode.target.value)}\n          required\n        ></input>\n        <button>Done</button>\n      </form>\n    </div>\n  );\n}\n\nexport default CourseRemove;\n","/home-extra/compdev/Documents/software-development/from-school/bow-valley-college/Term 03/SODV2201/homework/assignment-1/test/src/allPages/pages/GetHelp.js",[],[],"/home-extra/compdev/Documents/software-development/from-school/bow-valley-college/Term 03/SODV2201/homework/assignment-1/test/src/bvcStudent/pages/CourseAdd.js",["127"],[],"import React, { useState } from \"react\";\n\nfunction CourseAdd() {\n  const [cName, cNameSet] = useState(\"\");\n  const [cCode, cCodeSet] = useState(\"\");\n  const handleSubmit = (e) => {\n    // To not immediately lose all form values via refreshing upon submitting\n\n    const newCourse = { cName, cCode };\n    alert(\"Course Added!\");\n  };\n\n  return (\n    <div>\n      <h1>Add Course</h1>\n      <form onSubmit={handleSubmit}>\n        <label>Course Name (Required)</label>\n        <input\n          type=\"text\"\n          value={cName}\n          onChange={(newName) => cNameSet(newName.target.value)}\n          required\n        ></input>\n        <label>Course Code (Required)</label>\n        <input\n          type=\"text\"\n          value={cCode}\n          onChange={(newCode) => cCodeSet(newCode.target.value)}\n          required\n        ></input>\n        <button>Done</button>\n      </form>\n    </div>\n  );\n}\n\nexport default CourseAdd;\n","/home-extra/compdev/Documents/software-development/from-school/bow-valley-college/Term 03/SODV2201/homework/assignment-1/test/src/bvcStudent/pages/Home.js",[],[],"/home-extra/compdev/Documents/software-development/from-school/bow-valley-college/Term 03/SODV2201/homework/assignment-1/test/src/allPages/pages/PageNotFound.js",[],[],"/home-extra/compdev/Documents/software-development/from-school/bow-valley-college/Term 03/SODV2201/homework/assignment-1/test/src/bvcStudent/pages/MyCourses.js",["128"],[],"// CSS\nimport \"../styles/CourseList.css\";\n\n// Javascript & React Components\nimport React, { useState } from \"react\";\n\nfunction MyCourses() {\n  const [courseList, setCourseList] = useState([\n    [\n      { cName: \"Project Management 1\", cCode: \"PRO111\", id: 1 },\n      { cName: \"C++ Programming Fundamentals\", cCode: \"CPP111\", id: 2 },\n      { cName: \"Computer Maintenance\", cCode: \"COMP1111\", id: 3 },\n      { cName: \"Information Security 1\", cCode: \"IS1111\", id: 4 },\n    ],\n    [\n      { cName: \"Networking\", cCode: \"NET222\", id: 1 },\n      { cName: \"Web Technology\", cCode: \"WEB222\", id: 2 },\n      { cName: \"Project Management 2\", cCode: \"PRO222\", id: 3 },\n    ],\n    [\n      { cName: \"Advanced Project Management 1\", cCode: \"PRO333\", id: 1 },\n      { cName: \"Advanced Computer Maintenance\", cCode: \"CPP222\", id: 2 },\n      { cName: \"Advanced Information Security 1\", cCode: \"IS333\", id: 3 },\n    ],\n    [\n      { cName: \"Advanced Networking\", cCode: \"NET444\", id: 1 },\n      { cName: \"Advanced Computer Maintenance\", cCode: \"WEB444\", id: 2 },\n      { cName: \"Advanced Information Security 1\", cCode: \"PRO444\", id: 3 },\n    ],\n  ]);\n\n  // <div className=\"term01\" key={courseList.id}><h3>{courseList.cName}</h3><h4>{courseList.cCode}</h4></div>\n  return (\n    <div>\n      <h1>My Courses</h1>\n\n      <div className=\"courseList\">\n        <h1>Term 01</h1>\n        {courseList[0].map((courseList) => (\n          <div className=\"term01\" key={courseList.id}>\n            <h2>{courseList.cName}</h2>\n            <p>{courseList.cCode}</p>\n          </div>\n        ))}\n      </div>\n\n      <div className=\"courseList\">\n        <h1>Term 02</h1>\n        {courseList[1].map((courseList) => (\n          <div className=\"term01\" key={courseList.id}>\n            <h2>{courseList.cName}</h2>\n            <p>{courseList.cCode}</p>\n          </div>\n        ))}\n      </div>\n      <div className=\"courseList\">\n        <h1>Term 03</h1>\n        {courseList[2].map((courseList) => (\n          <div className=\"term01\" key={courseList.id}>\n            <h2>{courseList.cName}</h2>\n            <p>{courseList.cCode}</p>\n          </div>\n        ))}\n      </div>\n      <div className=\"courseList\">\n        <h1>Term 04</h1>\n        {courseList[3].map((courseList) => (\n          <div className=\"term01\" key={courseList.id}>\n            <h2>{courseList.cName}</h2>\n            <p>{courseList.cCode}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default MyCourses;\n",{"ruleId":"129","severity":1,"message":"130","line":38,"column":13,"nodeType":"131","endLine":38,"endColumn":31},{"ruleId":"132","severity":1,"message":"133","line":6,"column":8,"nodeType":"134","messageId":"135","endLine":6,"endColumn":18},{"ruleId":"129","severity":1,"message":"130","line":10,"column":9,"nodeType":"131","endLine":10,"endColumn":27},{"ruleId":"132","severity":1,"message":"136","line":11,"column":11,"nodeType":"134","messageId":"135","endLine":11,"endColumn":20},{"ruleId":"132","severity":1,"message":"136","line":11,"column":11,"nodeType":"134","messageId":"135","endLine":11,"endColumn":20},{"ruleId":"132","severity":1,"message":"137","line":10,"column":11,"nodeType":"134","messageId":"135","endLine":10,"endColumn":21},{"ruleId":"132","severity":1,"message":"136","line":11,"column":11,"nodeType":"134","messageId":"135","endLine":11,"endColumn":20},{"ruleId":"129","severity":1,"message":"130","line":13,"column":9,"nodeType":"131","endLine":13,"endColumn":27},{"ruleId":"132","severity":1,"message":"136","line":9,"column":11,"nodeType":"134","messageId":"135","endLine":9,"endColumn":20},{"ruleId":"132","severity":1,"message":"136","line":9,"column":11,"nodeType":"134","messageId":"135","endLine":9,"endColumn":20},{"ruleId":"132","severity":1,"message":"138","line":8,"column":22,"nodeType":"134","messageId":"135","endLine":8,"endColumn":35},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'AdminLogin' is defined but never used.","Identifier","unusedVar","'newCourse' is assigned a value but never used.","'newStudent' is assigned a value but never used.","'setCourseList' is assigned a value but never used."]